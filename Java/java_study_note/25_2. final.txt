* final

- final 키워드는 클래스, 메서드, 변수에 적용되며 abstract와 동시에 사용될 수 없습니다.

- final 클래스의 경우에는 상속이 안됩니다. 즉 서브클래스를 가질 수 없습니다.

- final 메서드는 재정의를 할 수 없습니다.

- final 변수는 값을 변경할 수 없습니다.








* final class

- 클래스 선언 시 final을 사용하면 그 클래스는 상속이 불가능해집니다.

- final 클래스는 자식 클래스를 가질 수 없고, 오직 외부에서 객체 생성을 통해서만 사용할 수 있습니다.

- final 클래스의 대표적인 예가 String 클래스입니다.

- 사용자가 임의로 String 클래스를 상속받아 메서드를 재정의하는 것을 방지하기 위한 것입니다.







* final 변수

- final 변수는 한번 값을 할당하면 그 값을 변경할 수 없습니다.

- final 변수는 선언시에 초기화하는 방법과 생성자를 통하여 초기화하는 방법이 있는데 
만약 초기화하지 않고 남겨두면 컴파일 에러가 발생합니다.




* 상수(static final)

- 자바에서는 불변의 값을 저장하는 필드를 상수(constant)라고 부릅니다.

- 상수는 객체마다 저장할 필요가 없는 공용성을 가져야 하며, 여러가지 값으로 초기화될 
수 없기 때문에 static과 final 제한자를 동시에 붙여 선언합니다.

- 상수 이름은 모두 대문자로 작성하는 것이 관례입니다. 연결된 단어라면 (_)로 단어들을 연결해줍니다.






* final method

- final 메서드는 자식 클래스에서 부모 클래스의 메서드를 재정의하지 못하게 합니다.

- 하지만 클래스에 final이 붙지 않는다면 상속은 가능하므로 자식 클래스에서 final 
  메서드의 참조는 가능합니다.

- 자식 클래스에서 반드시 부모의 메서드를 기능의 변경없이 사용하도록 강요할 경우에 
  final 메서드를 선언합니다.




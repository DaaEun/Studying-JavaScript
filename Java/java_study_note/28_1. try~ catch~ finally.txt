* try~ catch~ finally

- 프로그램에서 예외가 발생했을 경우 프로그램의 갑작스러운 종료를 막고, 
  정상 실행을 유지할 수 있도록 처리하는 코드를 예외 처리 코드라고 합니다.


- try~ catch ~ finally 블록은 생성자 내부나 메서드 내부에서 작성되어 컴파일 예외와 
  실행 예외가 발생할 경우에 예외 처리를 할 수 있게 해줍니다.


- try 블록에는 예외 발생 가능성이 있는 코드를 작성합니다. 
  try 블록의 코드가 예외 발생 없이 정상 실행되면 catch 블록은 실행되지 않습니다.


- try 내부에서 예외가 발생하면 즉시 실행을 멈추고 catch 블록으로 이동하여 
  예외 처리 코드를 실행합니다.


- 예외 발생 여부와 상관없이 항상 실행할 내용이 있다면 finally 블록 내부에 실행 
  내용을 작성합니다.







* finally 구문이 실행되지 않는 경우

1. finally 구문 이전에 System.exit() 구문을 호출했을 시
2. 컴퓨터가 꺼져서 시스템이 멈추었을 시
3. finally 블록 내부에서 예외가 발생했을 시(내부에 try catch를 넣어줌)






* 다중 catch

- try 블록 내부는 다양한 종류의 예외가 발생할 수 있습니다. 예외가 여러 가지 
  발생한다면 다중 catch 블록을 작성하여 예외들을 처리합니다.


- 다중 catch 블록을 작성할 때 주의할 점은 상위 예외 클래스가 하위 예외 클래스보다 아래쪽에 위치해야 합니다.


- catch 블록은 위에서부터 차례대로 검색되므로 상위 예외 클래스의 catch 블록이 위에 있다면 하위 예외 클래스의 catch블록은 실행되지 않습니다.


- 자바 7 버전부터 하나의 catch 블록에서 여러 개의 예외를 처리할 수 있도록 기능이 추가되었습니다


- catch() 괄호 안에 동일하게 처리하고 싶은 예외를 | 로 연결하면 됩니다. 
  이 방식을 사용할 때는 두 예외가 상속 관계가 있으면 안됩니다.
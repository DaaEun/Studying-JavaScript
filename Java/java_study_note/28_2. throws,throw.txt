* throws (메서드나 생성자에서 예외처리를 하는 코드)


- try ~catch 구문이 예외가 발생했을 때 직접 해결을 하고자 하는 코드라면 throws는 
  메서드나 생성자를 호출한 곳으로 예외를 떠넘기는 코드입니다.


- 즉 예외처리를 직접 수행하지 않고 메서드 호출자에게 예외를 던지는 방법입니다.


- throws 키워드가 붙어있는 메서드는 반드시 try 블록 내부에서 호출되어야 합니다. 
  그리고 catch블록에서 떠넘겨 받은 예외를 처리해야 합니다.


- main() 메서드에서 throws를 사용하는 것은 예외처리를 JVM에게 넘기겠다는 의미입니다. 
  그러나 JVM은 그 예외를 직접 처리해주지 않고 예외가 발생하면 예외 메시지만 출력하고 
  프로그램을 종료시킵니다.













* 사용자 정의 예외

- 프로그램을 개발하다보면 자바 표준 API에서 제공하는 예외 클래스만으로 다양한 종류의 예외를 표현할 수 
  없습니다.

- 개발자가 만든 어플리케이션에서 자체적으로 생길 수 있는 예외는 개발자가 직접 예외 클래스를 정의해서 
  만들어야 합니다.

- 사용자 정의 예외 클래스는 일반 예외로 선언할 경우 Exception 클래스를 상속하여 사용하고, 실행 예외로 
  선언할 경우 RuntimeException 클래스를 상속하면 됩니다.

- 사용자 정의 예외 클래스의 이름은 Exception으로 끝나는 것이 좋습니다.


























* 예외 강제 발생시키기

- 사용자가 직접 선언한 예외 클래스나 자바가 제공하는 예외 API에서 예외를 강제 발생시키려면 
  throw라는 키워드를 이용합니다.












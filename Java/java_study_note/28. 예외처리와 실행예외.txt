* 예외 처리(Exception)

- 에러에는 심각한 에러(serious error)와 가벼운 에러(mild error)가 있습니다. 
 심각한 에러는 시스템 상의 문제로 인한 에러로 개발자가 처리할 수 없는 에러를 말합니다.
 가벼운 에러는 개발자가 코드를 통해 처리할 수 있는 에러를 말하며 이 방식을
 예외처리라고 합니다.


- 예외에는 컴파일러 체크 예외와 실행 예외(Runtime Exception)가 있습니다.


- 컴파일러 체크 예외는 자바 소스를 컴파일하는 과정에서 예외 처리 코드를 검사하여 
  예외 처리 코드가 없다면 컴파일 오류가 발생합니다.


- 실행 예외는 컴파일하는 과정에서 예외처리 코드를 검사하지 않는 예외를 말합니다.


- 예외 처리는 컴파일 예외와 실행 예외에 대한 대처방법입니다.


- 예외 처리는 시스템 스스로 오류를 복구하는 것이 아니고 오류 발생 가능성이 있는 부분에 대한 처리를 미리 프로그래밍 해주는 것입니다.


- 프로그램에서 문제가 될만한 부분을 예상하여 사전에 "문제가 발생하면 이렇게 처리하라" 라고 프로그래밍 하는 것을 예외 처리라고 합니다.









* 실행 예외(Runtime Exception)

- 실행 예외는 컴파일러가 예외 처리 코드를 체크하지 않기 때문에 오로지 개발자의 
  경험에 의해서 예외 처리 코드를 삽입해야 합니다.


- 만약 개발자가 실행 예외에 대해 예외처리 코드를 넣지 않았을 경우 해당 예외가
  발생하면 프로그램은 곧바로 종료됩니다.


- 주요 실행 예외


1. NullPointerException

- 객체 참조가 없는 상태, 즉 null 값을 갖는 참조 변수로 객체 접근 연산자인 
  dot(.)를 사용했을 때 발생합니다.



2. ArrayIndexOutOfBoundsException

- 배열에서 인덱스 범위를 초과하여 사용할 경우 발생합니다.



3. NumberFormatException

- 문자열로 되어 있는 데이터를 숫자로 변경하는 경우에 발생합니다.



4. ClassCastException

- 형 변환은 부모 클래스와 자식 클래스간에 발생하고 구현 클래스와 인터페이스 간에도 
  발생합니다. 이러한 관계가 아니라면 다른 클래스로 타입을 변환할 수 없습니다.

- 상속관계나 인터페이스 관계가 없는 클래스들을 억지로 형 변환 할 경우 발생합니다. 
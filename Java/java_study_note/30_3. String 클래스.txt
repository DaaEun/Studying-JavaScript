* String 클래스

- String은 생성자를 사용해서 객체를 만들 필요 없이 기초 데이터를 사용할 때처럼 
  바로 초기화해서 사용할 수 있습니다.
  String name = "홍길동";

- String 클래스의 주요 메서드

1. charAt(): 특정 인덱스의 글자를 리턴.

2. indexOf(): 특정 문자열의 시작 인덱스 값을 반환합니다. 만약 주어진 문자열이 
   포함되어 있지 않으면 -1을 리턴합니다.

3. length(): 문자열의 길이를 알려줍니다.

4. replace(): 특정 문자열을 변경합니다.

5. substring(): 인덱스를 기준으로 그 앞의 문자열을 잘라줍니다. 만약 매개값으로 
   인덱스를 2개 주면 처음 매개값 이상 두 번째 매개값 미만의 문자열을 제외하고 
   나머지를 삭제합니다.

6. toUpperCase(): 문자열을 대문자로 치환합니다.

7. toLowerCase(): 문자열을 소문자로 치환합니다.

8. trim(): 문자열의 앞, 뒤 공백을 제거합니다.

9. equals(): 문자열의 값을 비교합니다.

10. valueOf(): 기본 데이터 타입의 값들을 문자열로 변환합니다.








* String 클래스의 단점

- String 클래스는 아주 많이 쓰이고 좋은 기능들을 많이 가지고 있지만 
  메모리를 과소비한다는 문제점이 있습니다.

- String 객체는 처음 초기화된 데이터에 변화가 생기면 기존 객체를 재활용하지 않고
  새로운 객체를 생성합니다.







* StringBuffer, StringBuilder

- String 클래스의 단점인 새로운 객체를 생성하는 문제로 인해 속도가 느려지는 현상이 
  발생하기 때문에 이 문제를 해결하기 위해 속도적인 측면에서 개선된 StringBuffer와 
  StringBuilder를 사용합니다.


- StringBuilder 클래스의 주요 메서드

1. append(): 기존 문자열의 뒤에 문자열을 추가합니다.

2. insert(): 특정 위치에 문자열을 추가합니다.

3. delete(): 문자열을 삭제합니다.

4. deleteCharAt(): 특정 인덱스의 문자 하나를 삭제합니다.

5. replace(): 문자열의 일부분을 다른 문자열로 대체합니다.

6. setCharAt(): 문자열에서 주어진 index의 문자를 다른 문자로 대체합니다.

7. toString(): StringBuilder 객체의 값을 문자열로 반환합니다.









* 인터페이스(Interface)

- 자바의 인터페이스는 객체의 사용 방법을 정의한 타입으로 객체의 교환성을 높여주기 때문에 다형성을 구현하는 매우 중요한 역할을 합니다.



- 인터페이스를 선언할 때는 interface 키워드를 사용하며, 클래스에서 인터페이스를 구현할 때는 클래스 이름 뒤에 implements 키워드를 사용하여 구현합니다.



- 클래스는 멤버변수, 생성자, 메서드를 구성 멤버로 가지지만 인터페이스는 상수와 메서드만을 구성 멤버로 가집니다.



- 인터페이스는 데이터를 저장할 수 없기 때문에 데이터를 저장할 객체를  선언할 수 없습니다.



- 따라서 인터페이스에서 선언된 변수는 public static final을 생략하더라도 컴파일 과정에서 자동으로 붙게 됩니다.



- 인터페이스의 메서드를 추상메서드 형식으로 선언하면 abstract를 붙이지 않더라도 자동으로 컴파일 과정에서 붙게 됩니다.



- 클래스가 상속 가능한 것처럼 인터페이스도 extends 키워드를 사용하여 인터페이스 간의 상속을 구현할 수 있으며, 다중 상속도 표현할 수 있습니다.



- 추상클래스란 abstract로 정의되거나, 클래스 내에 추상 메서드가 하나 이상 포함된 클래스입니다. 인터페이스와의 근본적인 차이점은 사용 목적입니다. 



- 클래스는 기본적으로 상속을 통해 기능을 확장하려는 목적으로 사용하며, 인터페이스는 해당 인터페이스를 구현한 객체들에 대해 동일한 동작을 약속하게 하기 위해서 사용합니다. 



- 추상클래스는 A	인터페이스는 I	헷갈리지 말자 




-이 외에 추상클래스는 다중상속이 불가능하고 인터페이스는 가능하다는 차이점도 있는데, 목적이 달라서 기능이 다른 것 뿐이지, 인터페이스는 다중상속을 보완하려고 존재하는게 아닙니다.





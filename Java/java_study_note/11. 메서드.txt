
* 메서드(method)

- 메서드는 반복되는 코드 블록에 이름을 붙여 놓은 것이다.

- 메서드는 반복되는 코드를 줄여주고, 좀 더 구조화시켜 우리가 코드를 알아보기 쉽게 한다. (코드의 모듈화)

- 코드의 재활용성 

- 객체지향프로그래밍에서 메서드는 '객체가 가져야할 기능을 구현하기 위해 만든다'라고 표현하기도 한다.

- 메서드의 이름 뒤에는 반드시 소괄호'()'가 따른다.

- 메서드 선언 방법

< 반환 유형 > < 메서드 식별자 이름> (매개 변수) {
	기능 상세;
 }

ex) int calcSum(int x){
	int sum = 0;
	for(int n =1;, n <= x; n++)
	sum += n;
	return sum;
 }

- 메서드 호출
ex) int result = calcSum(10);
	calcSum(100);






* 반환 유형(return type)

- 반환 유형은 메서드가 실행한 후 메서드를 호출한 곳에 반환하는 값의 데이터 타입이다.

- 메서드는 반환값이 있을 수도 있고 없을 수도 있는데 없는 경우에는 반환 유형에 void를 적어줘야 한다.

- 반환값이 있는 메서드를 호출할 때는 해당 반환유형에 맞는 변수에 반환값을 저장해야 한다.

- 메서드가 실행의 결과값을 반환할 때는 return이라는 키워드를 사용한다.






* 매개 변수(parameter)

- 매개 변수는 메서드가 실행될 때 필요한 데이터를 외부로부터 받기 위해 사용된다.

- 매개 변수도 일종의 변수이기 때문에 메서드의 소괄호() 부분에 데이터 타입과 함께 선언해야 하며 초기화는 하지 않는다.

- 매개 변수를 여러개 선언할 수 있으며, 메서드가 외부로부터 받을 데이터가 없다면 선언하지 않을 수도 있다. 이때는 반환 유형을 적을때와 같이 void를 쓰지 않고 소괄호() 안을 비워둬야 한다.







* Set 계열 컬렉션

- Set 컬렉션은 저장 순서를 보장하지 않으며 객체의 중복 저장을 허용하지 않습니다.

- Set 컬렉션은 인덱스로 관리하지 않으며 들어갈 때의 순서와 나올 때의 순서가 다를 
 수도 있습니다.

- Set 컬렉션은 인덱스로 객체를 검색하는 기능이 없고 전체 객체를 대상으로 한번씩 
  반복해서 객체의 값을 가져오는 반복자(Iterator)를 제공합니다.

- 반복자는 Iterator 인터페이스를 구현한 객체를 의미하며 이 객체는 Set 인터페이스의 
  iterator() 메서드를 호출하여 객체를 얻을 수 있습니다.

- Iterator 인터페이스의 주요 메서드

1. hasNext(): 가져올 객체가 있으면 true를 리턴하고 없으면 false를 리턴.
2. next(): 컬렉션에서 하나의 객체를 가져옴.
3. remove(): Set 컬렉션에서 객체를 제거함.






* Set 계열 컬렉션 주요 메서드

- 객체 추가 기능

1. add(E e): 주어진 객체를 저장, 성공적으로 저장되면 true를 리턴, 중복 객체를 저장하면 false를 리턴.

- 객체 검색 기능

1. contains(Object o): 주어진 객체가 저장되어 있는지의 여부를 판단.
2. isEmpty(): 컬렉션이 비어있는지를 조사.
3. iterator(): 저장된 객체를 한번씩 가져오는 반복자 객체를 리턴.
4. size(): 저장되어 있는 전체 객체 수를 리턴.

- 객체 삭제 기능

1. clear(): 저장된 모든 객체를 삭제.
2. remove(Object o): 주어진 객체를 삭제.






* HashSet

- HashSet 클래스는 Set 인터페이스를 구현한 컬렉션이므로 저장된 객체의 순서를 
  보장하지 않고 중복을 허용하지 않습니다.

- HashSet을 사용하면 많은 양의 데이터를 관리할 때 추가/삭제/검색 등에 있어서 
 순차적으로 데이터를 관리하는 것에 비하여 속도가 향상됩니다.